name: Node.js CI/CD

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types: [published]

jobs:
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Use pnpm
        uses: pnpm/action-setup@v4.0.0
      - name: Use Node.js ${{ vars.NODE_VERSION }}
        uses: actions/setup-node@v4.1.0
        with:
          node-version: ${{ vars.NODE_VERSION }}
          cache: pnpm

      - name: Install Project Dependencies
        run: pnpm install

      - name: ESLint
        run: pnpm lint:eslint
      - name: Prettier
        run: pnpm lint:prettier

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Use pnpm
        uses: pnpm/action-setup@v4.0.0
      - name: Use Node.js ${{ vars.NODE_VERSION }}
        uses: actions/setup-node@v4.1.0
        with:
          node-version: ${{ vars.NODE_VERSION }}
          cache: pnpm

      - name: Install Project Dependencies
        run: pnpm install

      - name: Build
        run: pnpm build
        env:
          NUXT_UI_PRO_LICENSE: ${{ secrets.NUXT_UI_PRO_LICENSE }}
          NUXT_PUBLIC_SITE_URL: ${{ vars.NUXT_PUBLIC_SITE_URL }}
          NUXT_PUBLIC_STUDIO_TOKENS: ${{ secrets.NUXT_PUBLIC_STUDIO_TOKENS }}
          APPLICATIONINSIGHTS_CONNECTION_STRING: ${{ secrets.APPLICATIONINSIGHTS_CONNECTION_STRING }}

      - name: Upload Docs Output
        uses: actions/upload-artifact@v4.4.3
        if: github.event_name != 'pull_request'
        with:
          name: docs
          path: docs/.output
          include-hidden-files: true

      - name: Upload Package Distribution
        uses: actions/upload-artifact@v4.4.3
        if: github.event_name != 'pull_request'
        with:
          name: package
          path: packages/nuxt-swa/dist
          include-hidden-files: true

  test:
    name: Unit Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Use pnpm
        uses: pnpm/action-setup@v4.0.0
      - name: Use Node.js ${{ vars.NODE_VERSION }}
        uses: actions/setup-node@v4.1.0
        with:
          node-version: ${{ vars.NODE_VERSION }}
          cache: pnpm

      - name: Install Project Dependencies
        run: pnpm install

      - name: Test
        run: pnpm test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5.0.7
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    name: Deploy to Azure Static Web Apps
    needs: [lint, build, test]
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    environment:
      name: ${{ (github.event_name == 'release' && 'production') || 'staging' }}
      url: ${{ vars.NUXT_PUBLIC_SITE_URL }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Use pnpm
        uses: pnpm/action-setup@v4.0.0
      - name: Use Node.js ${{ vars.NODE_VERSION }}
        uses: actions/setup-node@v4.1.0
        with:
          node-version: ${{ vars.NODE_VERSION }}
          cache: pnpm

      - name: Install Project Dependencies
        run: pnpm install --dev --ignore-scripts

      - name: Download Docs Output
        uses: actions/download-artifact@v4.1.8
        with:
          name: docs
          path: docs/.output

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Static Web Apps
        run: pnpm swa deploy --env ${{ (github.event_name == 'release' && 'production') || 'staging' }}

  publish:
    name: Publish Package
    needs: [lint, build, test]
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Use pnpm
        uses: pnpm/action-setup@v4.0.0
      - name: Use Node.js ${{ vars.NODE_VERSION }}
        uses: actions/setup-node@v4.1.0
        with:
          node-version: ${{ vars.NODE_VERSION }}
          registry-url: ${{ vars.NPM_REGISTRY_URL }}

      - name: Download Package Distribution
        uses: actions/download-artifact@v4.1.8
        with:
          name: package
          path: packages/nuxt-swa/dist

      - name: Publish
        run: pnpm -r publish --no-git-checks --ignore-scripts
        working-directory: packages/nuxt-swa
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
